package by.pvt.epam.command;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;

import by.pvt.epam.entity.Flight;
import by.pvt.epam.entity.Plane;
import by.pvt.epam.exception.TechnicalException;
import by.pvt.epam.resource.ConfigurationManager;
import by.pvt.epam.service.FlightService;

public class DeleteFlightCommand implements ActionCommand {

	private static final Logger LOGGER = Logger
			.getLogger(DeleteFlightCommand.class);
	private static final String PARAM_NAME_DELETED_FLIGHT_ID = "delFlightId";
	private static final String REQUEST_ATTRIBUTE_NAME_FLIGHT_DELETED = "flightDeleted";
	private static final String REQUEST_ATTRIBUTE_NAME_FLIGHT_NOT_DELETED = "flightNotDeleted";
	private static final String REQUEST_ATTRIBUTE_NAME_FLIGHTS = "flights";
	private static final String SESSION_ATTRIBUTE_NAME_PLANES = "planes";
	private static final String REQUEST_ATTRIBUTE_NAME_IS_PREVIOUS_FLIGHTS_PAGE = "isPreviousFlightsPage";
	private static final String REQUEST_ATTRIBUTE_NAME_IS_NEXT_FLIGHTS_PAGE = "isNextFlightsPage";

	private static final String REQUEST_ATTRIBUTE_NAME_USER_FLIGHTS = "userFlights";

	@Override
	public String execute(HttpServletRequest request) {
		String page = ConfigurationManager.getProperty("path.page.admin");
		String id = request.getParameter(PARAM_NAME_DELETED_FLIGHT_ID);
		int flightId = Integer.valueOf(id);
		FlightService flightService = new FlightService();
		boolean flag = flightService.deleteFlight(flightId);
		List<Flight> flights = null;
		try {
			flights = flightService.findAllFlights();
		} catch (TechnicalException e) {
			flag = false;
			LOGGER.error("TechnicalException", e);
		}
		if (flag) {
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHTS, flights);
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHT_DELETED,
					"flight.deleted");
		} else {
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHT_NOT_DELETED,
					"flight.notdeleted");
		}
		try {
			setAdminAttributes(request);
		} catch (TechnicalException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return page;
	}

	private void setAdminAttributes(HttpServletRequest request)
			throws TechnicalException {
		FlightService flightService = new FlightService();
		List<Flight> flights = flightService.findAllFlights();
		request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHTS, flights);
		List<Plane> planes = flightService.findAllPlanes();
		request.getSession()
				.setAttribute(SESSION_ATTRIBUTE_NAME_PLANES, planes);
		List<Flight> formedFlights = flightService.findFlightsByStatus(1, 0);
		request.setAttribute(REQUEST_ATTRIBUTE_NAME_USER_FLIGHTS, formedFlights);
		request.setAttribute(REQUEST_ATTRIBUTE_NAME_IS_NEXT_FLIGHTS_PAGE,
				moreFlights(1, 2));
		request.setAttribute(REQUEST_ATTRIBUTE_NAME_IS_PREVIOUS_FLIGHTS_PAGE,
				false);

	}

	private boolean moreFlights(int status, int startElement)
			throws TechnicalException {
		FlightService flightService = new FlightService();
		return !flightService.findFlightsByStatus(status, startElement)
				.isEmpty();
	}
}
