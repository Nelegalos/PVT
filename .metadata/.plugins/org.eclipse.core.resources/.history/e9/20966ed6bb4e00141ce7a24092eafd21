package by.pvt.epam.command;

import java.util.List;
import java.util.Set;
import javax.servlet.http.HttpServletRequest;
import org.apache.log4j.Logger;
import by.pvt.epam.entity.Employee;
import by.pvt.epam.entity.Flight;
import by.pvt.epam.exception.TechnicalException;
import by.pvt.epam.resource.ConfigurationManager;
import by.pvt.epam.service.CrewService;
import by.pvt.epam.service.FlightService;
import static by.pvt.epam.constants.Constants.*;

public class CompleteFlightCommand implements ActionCommand {

	private static final Logger LOGGER = Logger
			.getLogger(CompleteFlightCommand.class);

	@Override
	public String execute(HttpServletRequest request) {

		int flightId = Integer.valueOf(request
				.getParameter(PARAM_NAME_COMPLETED_FLIGHT_ID));
		CrewService crewService = new CrewService();
		FlightService flightService = new FlightService();
		List<Flight> completedFlights = null;
		List<Flight> formedFlights = null;
		Set<Employee> crew = null;
		boolean flag = false;
		flag = flightService.setFlightCompleted(flightId);
		try {
			crew = crewService.findCrewByFlightId(flightId);
			completedFlights = flightService.findStatusFlights(2);
			formedFlights = flightService.findFlightsByStatus(1, 0);
		} catch (TechnicalException e) {
			flag = false;
			LOGGER.error("TechnicalException", e);
		}
		for (Employee employee : crew) {
			int employeeId = employee.getId();
			flag = crewService.releaseEmployee(employeeId);
			if (flag == false) {
				break;
			}
		}
		if (flag) {
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_COMPLETED_FLIGHTS,
					completedFlights);
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHT_COMPLETED,
					"flight.completed");

			request.setAttribute(REQUEST_ATTRIBUTE_NAME_USER_FLIGHTS,
					formedFlights);
			boolean isPreviousFlightsPage = false;
			request.getSession().setAttribute(
					SESSION_ATTRIBUTE_NAME_FLIGHTS_PAGE, 0);
			request.getSession().setAttribute(
					SESSION_ATTRIBUTE_NAME_IS_PREVIOUS_FLIGHTS_PAGE,
					isPreviousFlightsPage);
			boolean nextButton = true;
			try {
				if ((flightService.findFlightsByStatus(1, 2)).isEmpty()) {
					nextButton = false;
				}
				request.getSession().setAttribute(
						SESSION_ATTRIBUTE_NAME_IS_NEXT_FLIGHTS_PAGE,
						nextButton);
			} catch (TechnicalException e) {
				request.setAttribute(REQUEST_ATTRIBUTE_NAME_NO_MORE_FLIGHTS,
						"flight.nomore");
				return ConfigurationManager.getProperty("path.page.admin");
			}

		} else {
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_FLIGHT_NOT_COMPLETED,
					"flight.notcompleted");
		}

		return ConfigurationManager.getProperty("path.page.admin");
	}
}
