package by.pvt.epam.logic;

import java.sql.Date;
import java.util.List;

import by.pvt.epam.dao.FlightDAO;
import by.pvt.epam.dao.FlightDAOImpl;
import by.pvt.epam.entity.Flight;

public class FlightLogic {
	public static List<Flight> findAllFlights() {
		FlightDAO flightDAO = new FlightDAOImpl();
		List<Flight> flights = flightDAO.findAllFlights();
		return flights;
	}

	public static List<Flight> findUnformedFlights() {
		FlightDAO flightDAO = new FlightDAOImpl();
		List<Flight> flights = flightDAO.findUnformedFlights();
		return flights;
	}

	public static boolean validateAddFlight(String id, String to, String from,
			String date, String plane, int status) {
		boolean flag = false;
		
		if (isEmpty(to, from)) {
			return flag;
		}
		try {
			int flightId = Integer.valueOf(id);
			Date date = Date.valueOf(date);
			
		} catch (IllegalArgumentException e) {
			
		} finally {
			
		}
		
		
		
		FlightDAO fd = new FlightDAOImpl();
		List<Flight> allFlights = fd.findAllFlights();
		if (id != 0)
			for (Flight flight : allFlights) {
				if (id == flight.getId()) {
					return flag;
				}
			}

		boolean flag = fd.addFlight(flightId, to, from, date, plane, status);

		return flag;

	}

	private static boolean isEmpty(String to, String from) {
		return to == "" || from == "";
	}

}
