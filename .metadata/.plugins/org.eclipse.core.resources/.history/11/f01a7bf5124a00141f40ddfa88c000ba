package by.pvt.epam.command;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import org.apache.log4j.Logger;
import by.pvt.epam.entity.Employee;
import by.pvt.epam.entity.Position;
import by.pvt.epam.exception.DAOException;
import by.pvt.epam.resource.ConfigurationManager;
import by.pvt.epam.service.CrewService;

public class AddEmployeeCommand implements ActionCommand {

	private static final Logger LOGGER = Logger
			.getLogger(AddEmployeeCommand.class);
	private static final String PARAM_NAME_EMPLOYEE_ID = "employeeId";
	private static final String REQUEST_ATTRIBUTE_NAME_EMPLOYEES = "employees";
	private static final String REQUEST_ATTRIBUTE_NAME_CREW = "crew";

	@SuppressWarnings("unchecked")
	@Override
	public String execute(HttpServletRequest request) {

		String page = ConfigurationManager.getProperty("path.page.team");
		int employeeId = Integer.valueOf(request
				.getParameter(PARAM_NAME_EMPLOYEE_ID));
		List<Employee> employees = (List<Employee>) request.getSession()
				.getAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEES);
		List<Employee> crew = (List<Employee>) request.getSession()
				.getAttribute(REQUEST_ATTRIBUTE_NAME_CREW);
		try {
			addEmloyeeToCrew(employeeId, employees, crew, request);
		} catch (DAOException e) {
			request.setAttribute("employeeNotAdded", "employee.notadded");
			request.removeAttribute("employeeAdded");
			LOGGER.error("TechnicalException", e);
			return page;
		}
		request.getSession().setAttribute(REQUEST_ATTRIBUTE_NAME_CREW, crew);
		request.getSession().setAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEES,
				employees);
		return page;
	}

	private void addEmloyeeToCrew(int employeeId, List<Employee> employees,
			List<Employee> crew, HttpServletRequest request)
			throws DAOException {
		CrewService cs = new CrewService();
		Employee newEmployee = cs.findEmployeeById(employeeId);
		Position pos = newEmployee.getPosition();
		int i = 0;
		while (i < crew.size()) {
			Employee empl = crew.get(i);
			if (empl.getPosition().equals(pos) && (empl.getId() == 0)) {
				crew.set(i, newEmployee);
				employees.remove(newEmployee);
				request.setAttribute("employeeAdded", "employee.added");
				request.removeAttribute("employeeNotAdded");
				break;
			} else {
				request.setAttribute("employeeNotAdded", "employee.notadded");
				request.removeAttribute("employeeAdded");
			}
			i++;
		}
	}

}
