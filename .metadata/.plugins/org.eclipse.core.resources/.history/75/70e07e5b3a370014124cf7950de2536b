package by.pvt.resource.pool;

import java.util.Queue;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
import java.util.LinkedList;

import by.pvt.resource.exception.OperatorTechnicalException;

public class CallCenter<T> {
	private final static int NUMBER_OF_OPERATORS = 5;
	private final Semaphore semaphore = new Semaphore(NUMBER_OF_OPERATORS, true);

	@SuppressWarnings("serial")
	private final Queue<Operator> operators = new LinkedList<Operator>() {
		{
			this.add(new Operator(1));
			this.add(new Operator(2));
			this.add(new Operator(3));
			this.add(new Operator(4));
			this.add(new Operator(5));
		}
	};

	public Operator getOperator(long maxWaitMilSec)
			throws OperatorTechnicalException {
		try {
			if (semaphore.tryAcquire(maxWaitMilSec, TimeUnit.MILLISECONDS)) {
				Operator operator = operators.poll();
				return operator;
			}
		} catch (InterruptedException e) {
			throw new OperatorTechnicalException(e);
		}
		// throw new OperatorTechnicalException("out of time");
	}

	public void releaseOperator(Operator operator) {
		operators.add(operator);
		semaphore.release();
	}
}