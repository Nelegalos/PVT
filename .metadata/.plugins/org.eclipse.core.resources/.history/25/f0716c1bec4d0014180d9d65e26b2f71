package by.pvt.epam.command;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;

import by.pvt.epam.entity.Employee;
import by.pvt.epam.entity.Position;
import by.pvt.epam.exception.TechnicalException;
import by.pvt.epam.resource.ConfigurationManager;
import by.pvt.epam.service.CrewService;

/**
 * The Class AddEmployeeCommand.
 */
public class AddEmployeeCommand implements ActionCommand {

	/** The Constant LOGGER. */
	private static final Logger LOGGER = Logger
			.getLogger(AddEmployeeCommand.class);
	
	/** The Constant PARAM_NAME_EMPLOYEE_ID. */
	private static final String PARAM_NAME_EMPLOYEE_ID = "employeeId";
	
	/** The Constant SESSION_ATTRIBUTE_NAME_CREW. */
	private static final String SESSION_ATTRIBUTE_NAME_CREW = "crew";
	
	/** The Constant SESSION_ATTRIBUTE_NAME_EMPLOYEES. */
	private static final String SESSION_ATTRIBUTE_NAME_EMPLOYEES = "employees";
	
	/** The Constant REQUEST_ATTRIBUTE_NAME_EMPLOYEE_ADDED. */
	private static final String REQUEST_ATTRIBUTE_NAME_EMPLOYEE_ADDED = "employeeAdded";
	
	/** The Constant REQUEST_ATTRIBUTE_NAME_EMPLOYEE_NOT_ADDED. */
	private static final String REQUEST_ATTRIBUTE_NAME_EMPLOYEE_NOT_ADDED = "employeeNotAdded";

	/* (non-Javadoc)
	 * @see by.pvt.epam.command.ActionCommand#execute(javax.servlet.http.HttpServletRequest)
	 */
	@SuppressWarnings("unchecked")
	@Override
	public String execute(HttpServletRequest request) {
		try {
			List<Employee> availableEmployees = (List<Employee>) request
					.getSession()
					.getAttribute(SESSION_ATTRIBUTE_NAME_EMPLOYEES);
			List<Employee> crew = (List<Employee>) request.getSession()
					.getAttribute(SESSION_ATTRIBUTE_NAME_CREW);
			addEmloyeeToCrew(availableEmployees, crew, request);
		} catch (TechnicalException e) {
			request.setAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_NOT_ADDED,
					"employee.notadded");
			request.removeAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_ADDED);
			LOGGER.error("TechnicalException", e);
		}
		return ConfigurationManager.getProperty("path.page.team");
	}

	/**
	 * Checks if is correct employee.
	 *
	 * @param crewEmployee the crew employee
	 * @param addedEmployeePosition the added employee position
	 * @return true, if is correct employee
	 */
	private boolean isCorrectEmployee(Employee crewEmployee,
			Position addedEmployeePosition) {
		return (crewEmployee.getPosition().equals(addedEmployeePosition) && (crewEmployee
				.getId() == 0));
	}

	/**
	 * Adds the emloyee to crew.
	 *
	 * @param availableEmployees the available employees
	 * @param crew the crew
	 * @param request the request
	 * @throws TechnicalException the technical exception
	 */
	private void addEmloyeeToCrew(List<Employee> availableEmployees,
			List<Employee> crew, HttpServletRequest request)
			throws TechnicalException {
		int addedEmployeeId = Integer.valueOf(request
				.getParameter(PARAM_NAME_EMPLOYEE_ID));
		CrewService cs = new CrewService();
		Employee addedEmployee = cs.findEmployeeById(addedEmployeeId);
		Position addedEmployeePosition = addedEmployee.getPosition();
		int i = 0;
		while (i < crew.size()) {
			Employee crewEmployee = crew.get(i);
			if (isCorrectEmployee(crewEmployee, addedEmployeePosition)) {
				crew.set(i, addedEmployee);
				availableEmployees.remove(addedEmployee);
				request.setAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_ADDED,
						"employee.added");
				request.removeAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_NOT_ADDED);
				break;
			} else {
				request.setAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_NOT_ADDED,
						"employee.notadded");
				request.removeAttribute(REQUEST_ATTRIBUTE_NAME_EMPLOYEE_ADDED);
			}
			i++;
		}
		request.getSession().setAttribute(SESSION_ATTRIBUTE_NAME_CREW, crew);
		request.getSession().setAttribute(SESSION_ATTRIBUTE_NAME_EMPLOYEES,
				availableEmployees);
	}

}
